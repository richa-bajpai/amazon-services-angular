{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { EventEmitter } from '@angular/core';\nimport { signup } from '../datatype';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let NewuserService = /*#__PURE__*/(() => {\n  class NewuserService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.isnewuserLoggedin = new BehaviorSubject(false);\n      this.usrloginError = new EventEmitter(false);\n    }\n\n    userSignup(data) {\n      this.http.post(`http://localhost:3000/user`, data, {\n        observe: 'response'\n      }).subscribe(result => {\n        this.isnewuserLoggedin.next(true);\n        localStorage.setItem('user', JSON.stringify(result.body));\n        this.router.navigate(['user-home']);\n      });\n    }\n\n    userLogin(data) {\n      this.http.get(`http://localhost:3000/user?email=${data.email}&password=${data.password}`, {\n        observe: 'response'\n      }).subscribe(result => {\n        if (result && result.body && result.body.length) {\n          localStorage.setItem('user', JSON.stringify(result.body));\n          this.router.navigate(['user-home']);\n        } else {\n          this.usrloginError.emit(true);\n        }\n      });\n    }\n\n  }\n\n  NewuserService.ɵfac = function NewuserService_Factory(t) {\n    return new (t || NewuserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  NewuserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NewuserService,\n    factory: NewuserService.ɵfac,\n    providedIn: 'root'\n  });\n  return NewuserService;\n})();","map":null,"metadata":{},"sourceType":"module"}