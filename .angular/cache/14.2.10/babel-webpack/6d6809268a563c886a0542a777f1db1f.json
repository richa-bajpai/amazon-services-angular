{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { cart, pro, product, signup } from '../datatype';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let UserserviceService = /*#__PURE__*/(() => {\n  class UserserviceService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.isUserloggedin = new BehaviorSubject(false);\n      this.slrloginError = new EventEmitter(false);\n      this.cartNewData = new EventEmitter();\n    }\n\n    slrSignup(data) {\n      this.http.post('http://localhost:3000/seller', data, {\n        observe: 'response'\n      }).subscribe(result => {\n        this.isUserloggedin.next(true);\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.router.navigate(['seller-home']);\n      });\n    }\n\n    slrLogin(data) {\n      this.http.get(`http://localhost:3000/seller?email=${data.email}&password=${data.password}`, {\n        observe: 'response'\n      }).subscribe(result => {\n        if (result && result.body && result.body.length) {\n          localStorage.setItem('seller', JSON.stringify(result.body));\n          this.router.navigate(['seller-home']);\n        } else {\n          this.slrloginError.emit(true);\n        }\n      });\n    }\n\n    slrProduct(data) {\n      this.http.post(`http://localhost:3000/sellerproduct`, data, {\n        observe: 'response'\n      }).subscribe(result => {\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.router.navigate(['seller-product']);\n      });\n    }\n\n    slrProductList() {\n      return this.http.get(`http://localhost:3000/sellerproduct`);\n    }\n\n    getProduct(id) {\n      return this.http.get(`http://localhost:3000/sellerproduct/${id}`);\n    }\n\n    dltProduct(id) {\n      return this.http.delete(`http://localhost:3000/sellerproduct/${id}`);\n    }\n\n    searchProduct(query) {\n      return this.http.get(`http://localhost:3000/sellerproduct?q=${query}`);\n    }\n\n    productAccesories(query) {\n      return this.http.get(`http://localhost:3000/sellerproduct?q=${query}`);\n    }\n\n    localAddtocart(data) {\n      let cartData = [];\n      let localCart = localStorage.getItem('localCart');\n\n      if (!localCart) {\n        localStorage.setItem('localCart', JSON.stringify([data]));\n        this.cartNewData.emit([data]);\n      } else {\n        cartData = JSON.parse(localCart);\n        cartData.push(data);\n        localStorage.setItem('localCart', JSON.stringify(cartData));\n      }\n\n      this.cartNewData.emit(cartData);\n    }\n\n    RemoveItem(productId) {\n      let cartData = localStorage.getItem('localCart');\n\n      if (cartData) {\n        let items = JSON.parse(cartData);\n        items = items.filter(item => productId !== item.id);\n        localStorage.setItem('loca  lCart', JSON.stringify(items));\n        this.cartNewData.emit(items);\n      }\n    }\n\n    Addtokrt(cartDta) {\n      return this.http.post('http://localhost:3000/cart', cartDta);\n    }\n\n    getcartList(userId) {\n      return this.http.get('http://localhost:3000/cart?userId=' + userId, {\n        observe: 'response'\n      }).subscribe(result => {\n        console.warn(result);\n\n        if (result && result.body) {\n          this.cartNewData.emit(result.body);\n        }\n      });\n    }\n\n    removeFromcart(cartId) {\n      return this.http.delete('http://localhost:3000/cart/' + cartId);\n    }\n\n    currentCart() {\n      let uList = localStorage.getItem('user');\n      let uData = uList && JSON.parse(uList)[0];\n      return this.http.get('http://localhost:3000/cart?userId=' + uData.id);\n    }\n\n  }\n\n  UserserviceService.ɵfac = function UserserviceService_Factory(t) {\n    return new (t || UserserviceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  UserserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserserviceService,\n    factory: UserserviceService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserserviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}